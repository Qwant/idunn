version: '3.3'

networks:
  bridge:
    external:
      name: bridge
  default:
    attachable: true
    driver: overlay
  traefik:
    external:
      name: product-maps-master_traefik

services:
  idunn:
    image: qwantresearch/idunn@sha256:370c6d84f4dc5c1abb755efeb31f01abd9b553d681e715c46404ba3f7d6161fd
    labels: &ci_labels
      com.qwant.ci.job_id: ${CI_JOB_ID}
      com.qwant.ci.pipeline_id: ${CI_PIPELINE_ID}
      com.qwant.ci.project_id: ${CI_PROJECT_ID}
    command: "--workers=4"
    deploy:
      labels:
        <<: *ci_labels
        traefik.docker.network: "product-maps-master_traefik"
        traefik.frontend.rule: "PathPrefixStrip:/maps/detail/"
        traefik.port: "5000"
      mode: replicated
      placement:
        constraints:
        - node.labels.type != node1
        - node.labels.type != node4
      replicas: 2
      resources:
        limits:
          memory: 4g
      restart_policy:
        condition: on-failure
    environment:
      - IDUNN_LOG_JSON=1
      - IDUNN_MIMIR_ES=http://es:9200
      - IDUNN_WIKI_API_REDIS_URL=idunn-redis:6379
      - IDUNN_WIKI_ES=http://10.100.33.34:9200
    networks:
      - bridge
      - default
      - traefik

  idunn-redis:
    deploy:
      labels: *ci_labels
      replicas: &replicas 7
      resources:
        limits:
          cpus: "2"
          memory: 2g
    environment:
      REDIS_ALIAS: "{{.Service.Name}}.{{.Task.Slot}}"
      REDIS_DNS_LOOKUP_EXPECT: *replicas
      REDIS_DNS_LOOKUP_NAME: tasks.idunn-redis
    image: $CI_REGISTRY_IMAGE/idunn-redis:42437
    labels: *ci_labels
    restart_policy:
      condition: on-failure
