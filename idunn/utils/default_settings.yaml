USER_AGENT: "Idunn/0.1"

MIMIR_ES: http://localhost:9200/

WIKI_ES:
WIKI_ES_TIMEOUT: 0.5 # seconds
WIKI_ES_MAX_RETRIES: 0
WIKI_USER_AGENT: "Idunn/0.1" # Used in requests to external wiki* APIs

DEFAULT_LANGUAGE: 'en' # Fallback when no 'lang' in request

ES_WIKI_LANG: "de,en,es,fr,it" # the (comma separated) list of languages existing in the WIKI_ES

WIKI_API_RL_MAX_CALLS: 100 # Max number of external calls allowed by the rate limiter
WIKI_API_RL_PERIOD: 1 # Duration (in seconds) of the period where no more than the max number of external calls are expected
WIKI_API_REDIS_URL: # DEPRECATED. Use REDIS_URL instead
WIKI_CACHE_REDIS_DB: 1
WIKI_CACHE_TIMEOUT: 86400 # seconds

LOG_LEVEL_BY_MODULE: '{"": "info", "elasticsearch": "warning"}' # json config to set, for each module a log level
LOG_FORMAT: '[%(asctime)s] [%(levelname)5s] [%(process)5s] [%(name)10s] %(message)s' # logging format. if the log are json, it list the default fields
LOG_JSON: False  # To get flat logs or json logs

# Trigger the multiprocess mode of Prometheus (for gunicorn).
#     In the default configuration of Idunn, Prometheus is not multiprocess.
#     So if you want to use the multiprocess mode, you have either to:
#         * use the Idunn dockerfile (in this repo)
#         * manually (i) change this variable to True
#                    (ii) create an empty directory: <idunn-dir>/prometheus_multiproc
#                    (iii) define the following env variable: prometheus_multiproc_dir pointing to the directory defined at (ii)
PROMETHEUS_MULTIPROC: False

# Since we give to Idunn the type of the place requested we want to
# fetch the index corresponding to this type directly.
# The indices names can be set below:
PLACE_ADMIN_INDEX: "munin_admin"
PLACE_STREET_INDEX: "munin_street"
PLACE_ADDRESS_INDEX: "munin_addr"
PLACE_POI_INDEX: "munin_poi"
PLACE_DEFAULT_INDEX: "munin"

WIKI_DESC_MAX_SIZE: 325 # max size allowed to the description of the wiki block

LIST_PLACES_MAX_SIZE: 50

########################
## Redis
REDIS_URL:
REDIS_TIMEOUT: "0.3" # seconds


########################
## Circuit Breaker
CIRCUIT_BREAKER_TIMEOUT: 120 # timeout period in seconds
CIRCUIT_BREAKER_MAXFAIL: 20 # consecutive failures before breaking

########################
## Rate Limiter
RATE_LIMITER_REDIS_DB: 0


########################
## Images

BLOCK_IMAGES_ENABLED: True
THUMBR_SALT:
THUMBR_ENABLED: True # Set to False if you want to keep raw image urls instead of Thumbr
THUMBR_URLS: "https://s1.qwant.com/thumbr,https://s2.qwant.com/thumbr"

#########################
## Data sources

# Pages jaunes
PJ_ES:
PJ_ES_INDEX: "pagesjaunes"
PJ_ES_QUERY_TEMPLATE: "pagesjaunes_query"

#######################
## Data Publishing

BLOCK_AIR_QUALITY_ENABLED: True

# kuzzle Cluster
KUZZLE_CLUSTER_URL:
KUZZLE_REQUEST_TIMEOUT: "0.5" # seconds

# weather API
WEATHER_API_URL:
WEATHER_API_KEY:
WEATHER_REQUEST_TIMEOUT: "0.5" #seconds

#######################
## CORS

CORS_OPTIONS_REQUESTS_ENABLED: False

#######################
## Directions
DIRECTIONS_RL_MAX_REQUESTS: 30 # per client
DIRECTIONS_RL_EXPIRE: 60 # seconds
DIRECTIONS_TIMEOUT: 8 # seconds
DIRECTIONS_CLIENT_CACHE: 60 #Â seconds
QWANT_DIRECTIONS_API_BASE_URL:
MAPBOX_DIRECTIONS_API_BASE_URL: "https://api.mapbox.com/directions/v5/mapbox"
MAPBOX_DIRECTIONS_ACCESS_TOKEN:
COMBIGO_API_BASE_URL: "https://maps.combigo.com/v1.1"
COMBIGO_API_KEY:
