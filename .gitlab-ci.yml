stages:
  - build
  - development
  - prelive
  - production


before_script:
  - source ci/bootstrap.sh
  - docker login
    --username "$CI_REGISTRY_USER"
    --password-stdin "$CI_REGISTRY" <<< "$CI_REGISTRY_PASSWORD"


push docker-service-network image:
  stage: build
  tags:
    - light
  script:
    - docker pull "$SOURCE_IMAGE"
    - docker tag "$SOURCE_IMAGE" "$DEST_IMAGE"
    - docker push "$DEST_IMAGE"
  variables:
    SOURCE_IMAGE: "${CI_REGISTRY}/continuous-integration/docker-service-network:3a735904"
    DEST_IMAGE: "${CI_REGISTRY_IMAGE}/ci/docker-service-network:latest"
  when: manual


build:
  stage: build
  tags:
    - light
  script:
    - export REDIS_IMAGE_TAG="$(echo $CI_COMMIT_REF_SLUG | sed 's/master/latest/g')"
    - docker-compose build --pull
    - docker-compose push
    - subst < ci/templates/docker-content-digest.env | tee docker-content-digest.env
  variables:
    COMPOSE_FILE: "docker-compose.build.yml"
    COMPOSE_PROJECT_NAME: "$CI_PROJECT_PATH_SLUG-j$CI_JOB_ID"
    IDUNN_IMAGE_TAG: "latest"
  artifacts:
    paths:
      - docker-content-digest.env
      - ci/bootstrap.sh
      - ci/bin/docker-stack-wait
      - ci/bin/docker-service-network
      - ci/development/docker-compose.yml
      - ci/prelive/docker-compose.yml
      - ci/production/docker-compose.yml
      - docker-compose.yml


.deploy:
  image: registry.qwant.ninja/docker/dood:18.09
  before_script:
    - source ci/bootstrap.sh
    - docker login 
      --username "$CI_DEPLOY_USER" 
      --password-stdin "$CI_REGISTRY" <<< "$CI_DEPLOY_PASSWORD"
  dependencies:
    - build
  tags:
    - light-docker
  variables:
    COMPOSE_FILE: "docker-compose.yml:ci/${CI_JOB_STAGE}/docker-compose.yml"
    COMPOSE_PROJECT_NAME: "$CI_PROJECT_PATH_SLUG-j$CI_JOB_ID"
    DOCKER_HOST: "tcp://10.100.31.132:2375"
    GIT_STRATEGY: none
    PROMETHEUS_SERVICE_NAME: "1120_prometheus"
    ROUTER_SERVICE_NAME: "product-maps-traefik_traefik"
    STACK_NAME: "$CI_PROJECT_ID"
  when: manual


deploy development:
  extends: .deploy
  stage: development
  environment:
    name: development
    url: "http://maps.dev.qwant.ninja/maps"
  script:
    - deploy
  variables:
    KUZZLE_SERVICE_NAME: "1216_kuzzle"
    NLU_SERVICE_NAME: "1701_nlu"


deploy prelive:
  extends: "deploy development"
  stage: prelive
  environment:
    name: prelive
    url: "https://www.qwant.plive/maps"
  variables:
    DOCKER_HOST: "tcp://10.103.9.1:2375"


deploy production:
  extends: "deploy prelive"
  stage: production
  script:
    - echo "10.100.56.249 manager.maps.qwant.infra" > /etc/hosts
    - deploy
  environment:
    name: production
    url: "https://www.qwant.com/maps"
  variables:
    DOCKER_HOST: "tcp://manager.maps.qwant.infra:2376"
    DOCKER_TLS_VERIFY: "1"
    ROUTER_SERVICE_NAME: "product-maps-production_traefik"
